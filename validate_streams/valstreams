#!/bin/bash

# Companion script for streams.db project
# parse through unvalidated streams 
# 2010 March 1
# by Jayson Williams
genres=$(sqlite3 ~/streams/streamtest.db \
"select rowid, genre
from genres;" | sed '1d')
while [ 1 ]; do
stream=$(sqlite3 ~/streams/streamtest.db \
"select min(url) from streams
 where validated = 'f';" |sed '1d')
streamname=$(sqlite3 ~/streams/streamtest.db \
"select name,min(url) from streams
 where validated = 'f';" |sed '1d' |sed 's|\|http.*||')
mplayer "$stream"
echo '-------------------------------'
echo $stream
echo -n "Is this a valid stream?(y / n) ->"
read valid
echo '--------------------------------'

if [ -z $valid ]; then
    valid='skip'
fi

if [ $valid = 'n' ]; then
   ( sqlite3 ~/streams/streamtest.db \
       "update streams set validated = '0' where url = '$stream';");
   elif [ $valid = 'y' ]; then
        echo -n "Stream Name (return for $streamname) ->"
    read name
    echo '--------------------------------'
    if [ -z $name ]; then
	name=$streamname
    fi
    echo Stream Genres
    echo -------------
    echo $genres
    echo -n "Select a Genre for this stream ->"
    read genre
    echo '--------------------------------'
    ( sqlite3 ~/streams/streamtest.db \
	"update streams set validated = '1', name = '"$name"', genre_id = '"$genre"'  where url = '$stream';");
fi

done